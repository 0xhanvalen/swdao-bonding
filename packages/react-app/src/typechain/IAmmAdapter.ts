/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IAmmAdapterInterface extends utils.Interface {
  functions: {
    "getProvideLiquidityCalldata(address,address,address[],uint256[],uint256)": FunctionFragment;
    "getProvideLiquiditySingleAssetCalldata(address,address,address,uint256,uint256)": FunctionFragment;
    "getRemoveLiquidityCalldata(address,address,address[],uint256[],uint256)": FunctionFragment;
    "getRemoveLiquiditySingleAssetCalldata(address,address,address,uint256,uint256)": FunctionFragment;
    "getSpenderAddress(address)": FunctionFragment;
    "isValidPool(address,address[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getProvideLiquidityCalldata",
    values: [string, string, string[], BigNumberish[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProvideLiquiditySingleAssetCalldata",
    values: [string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRemoveLiquidityCalldata",
    values: [string, string, string[], BigNumberish[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRemoveLiquiditySingleAssetCalldata",
    values: [string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpenderAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidPool",
    values: [string, string[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "getProvideLiquidityCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProvideLiquiditySingleAssetCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRemoveLiquidityCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRemoveLiquiditySingleAssetCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpenderAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidPool",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IAmmAdapter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IAmmAdapterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getProvideLiquidityCalldata(
      _setToken: string,
      _pool: string,
      _components: string[],
      _maxTokensIn: BigNumberish[],
      _minLiquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string] & {
        _target: string;
        _value: BigNumber;
        _calldata: string;
      }
    >;

    getProvideLiquiditySingleAssetCalldata(
      _setToken: string,
      _pool: string,
      _component: string,
      _maxTokenIn: BigNumberish,
      _minLiquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string] & {
        _target: string;
        _value: BigNumber;
        _calldata: string;
      }
    >;

    getRemoveLiquidityCalldata(
      _setToken: string,
      _pool: string,
      _components: string[],
      _minTokensOut: BigNumberish[],
      _liquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string] & {
        _target: string;
        _value: BigNumber;
        _calldata: string;
      }
    >;

    getRemoveLiquiditySingleAssetCalldata(
      _setToken: string,
      _pool: string,
      _component: string,
      _minTokenOut: BigNumberish,
      _liquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string] & {
        _target: string;
        _value: BigNumber;
        _calldata: string;
      }
    >;

    getSpenderAddress(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    isValidPool(
      _pool: string,
      _components: string[],
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  getProvideLiquidityCalldata(
    _setToken: string,
    _pool: string,
    _components: string[],
    _maxTokensIn: BigNumberish[],
    _minLiquidity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string] & {
      _target: string;
      _value: BigNumber;
      _calldata: string;
    }
  >;

  getProvideLiquiditySingleAssetCalldata(
    _setToken: string,
    _pool: string,
    _component: string,
    _maxTokenIn: BigNumberish,
    _minLiquidity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string] & {
      _target: string;
      _value: BigNumber;
      _calldata: string;
    }
  >;

  getRemoveLiquidityCalldata(
    _setToken: string,
    _pool: string,
    _components: string[],
    _minTokensOut: BigNumberish[],
    _liquidity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string] & {
      _target: string;
      _value: BigNumber;
      _calldata: string;
    }
  >;

  getRemoveLiquiditySingleAssetCalldata(
    _setToken: string,
    _pool: string,
    _component: string,
    _minTokenOut: BigNumberish,
    _liquidity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string] & {
      _target: string;
      _value: BigNumber;
      _calldata: string;
    }
  >;

  getSpenderAddress(_pool: string, overrides?: CallOverrides): Promise<string>;

  isValidPool(
    _pool: string,
    _components: string[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    getProvideLiquidityCalldata(
      _setToken: string,
      _pool: string,
      _components: string[],
      _maxTokensIn: BigNumberish[],
      _minLiquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string] & {
        _target: string;
        _value: BigNumber;
        _calldata: string;
      }
    >;

    getProvideLiquiditySingleAssetCalldata(
      _setToken: string,
      _pool: string,
      _component: string,
      _maxTokenIn: BigNumberish,
      _minLiquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string] & {
        _target: string;
        _value: BigNumber;
        _calldata: string;
      }
    >;

    getRemoveLiquidityCalldata(
      _setToken: string,
      _pool: string,
      _components: string[],
      _minTokensOut: BigNumberish[],
      _liquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string] & {
        _target: string;
        _value: BigNumber;
        _calldata: string;
      }
    >;

    getRemoveLiquiditySingleAssetCalldata(
      _setToken: string,
      _pool: string,
      _component: string,
      _minTokenOut: BigNumberish,
      _liquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string] & {
        _target: string;
        _value: BigNumber;
        _calldata: string;
      }
    >;

    getSpenderAddress(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<string>;

    isValidPool(
      _pool: string,
      _components: string[],
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    getProvideLiquidityCalldata(
      _setToken: string,
      _pool: string,
      _components: string[],
      _maxTokensIn: BigNumberish[],
      _minLiquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProvideLiquiditySingleAssetCalldata(
      _setToken: string,
      _pool: string,
      _component: string,
      _maxTokenIn: BigNumberish,
      _minLiquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRemoveLiquidityCalldata(
      _setToken: string,
      _pool: string,
      _components: string[],
      _minTokensOut: BigNumberish[],
      _liquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRemoveLiquiditySingleAssetCalldata(
      _setToken: string,
      _pool: string,
      _component: string,
      _minTokenOut: BigNumberish,
      _liquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpenderAddress(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isValidPool(
      _pool: string,
      _components: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getProvideLiquidityCalldata(
      _setToken: string,
      _pool: string,
      _components: string[],
      _maxTokensIn: BigNumberish[],
      _minLiquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProvideLiquiditySingleAssetCalldata(
      _setToken: string,
      _pool: string,
      _component: string,
      _maxTokenIn: BigNumberish,
      _minLiquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRemoveLiquidityCalldata(
      _setToken: string,
      _pool: string,
      _components: string[],
      _minTokensOut: BigNumberish[],
      _liquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRemoveLiquiditySingleAssetCalldata(
      _setToken: string,
      _pool: string,
      _component: string,
      _minTokenOut: BigNumberish,
      _liquidity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpenderAddress(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isValidPool(
      _pool: string,
      _components: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

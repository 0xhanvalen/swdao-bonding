/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PerpV2LeverageModuleViewer,
  PerpV2LeverageModuleViewerInterface,
} from "../PerpV2LeverageModuleViewer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPerpV2LeverageModule",
        name: "_perpModule",
        type: "address",
      },
      {
        internalType: "contract IAccountBalance",
        name: "_perpAccountBalance",
        type: "address",
      },
      {
        internalType: "contract IClearingHouseConfig",
        name: "_perpClearingHouseConfig",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_vQuoteToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_slippage",
        type: "int256",
      },
    ],
    name: "getMaximumSetTokenIssueAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
    ],
    name: "getTotalCollateralUnit",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
    ],
    name: "getVirtualAssetsDisplayInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "vAssetAddress",
            type: "address",
          },
          {
            internalType: "int256",
            name: "positionUnit",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "indexPrice",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "currentLeverageRatio",
            type: "int256",
          },
        ],
        internalType: "struct PerpV2LeverageModuleViewer.VAssetDisplayInfo[]",
        name: "assetInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [],
    name: "perpAccountBalance",
    outputs: [
      {
        internalType: "contract IAccountBalance",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [],
    name: "perpClearingHouseConfig",
    outputs: [
      {
        internalType: "contract IClearingHouseConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [],
    name: "perpModule",
    outputs: [
      {
        internalType: "contract IPerpV2LeverageModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [],
    name: "vQuoteToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    gas: "0x01ba8140",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620018163803806200181683398101604081905262000035916200011d565b6001600160601b0319606085811b821660805284811b821660a05283811b821660c05282901b1660e05260408051632c805af560e21b815290516001600160a01b0386169163b2016bd4916004808301926020929190829003018186803b158015620000a057600080fd5b505afa158015620000b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000db9190620000f7565b60601b6001600160601b03191661010052506200019d92505050565b60006020828403121562000109578081fd5b8151620001168162000184565b9392505050565b6000806000806080858703121562000133578283fd5b8451620001408162000184565b6020860151909450620001538162000184565b6040860151909350620001668162000184565b6060860151909250620001798162000184565b939692955090935050565b6001600160a01b03811681146200019a57600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6115fd620002196000398061068752806106cb5250806104a5528061053f5280610a8b5250806105bf52806107b352508061012e52806106f2528061085952806108fe5250806101cb52806105e35280610ace52506115fd6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5b417bf1161005b578063a5b417bf146100db578063b2016bd4146100fc578063fba4cee614610104578063fbc217891461012457610088565b80630b23207c1461008d5780635ef3a513146100ab578063909e7690146100cb578063a4039b5d146100d3575b600080fd5b61009561012c565b6040516100a2919061122b565b60405180910390f35b6100be6100b936600461107d565b610150565b6040516100a2919061123f565b6100956105bd565b6100956105e1565b6100ee6100e936600461107d565b610605565b6040516100a29291906112cc565b6100956106c9565b610117610112366004611099565b6106ed565b6040516100a291906112e5565b610095610a89565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561018d57600080fd5b505afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906111e7565b905060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395ba2006856040518263ffffffff1660e01b8152600401610215919061122b565b60006040518083038186803b15801561022d57600080fd5b505afa158015610241573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102699190810190610fd7565b9050600061027685610aad565b825190915061028c81600163ffffffff610b8816565b67ffffffffffffffff811180156102a257600080fd5b506040519080825280602002602001820160405280156102dc57816020015b6102c9610f07565b8152602001906001900390816102c15790505b5094506000805b82811015610497576102f3610f3f565b8582815181106102ff57fe5b60200260200101519050600081600001516001600160a01b0316631208064760006040518263ffffffff1660e01b815260040161033c91906112e5565b60206040518083038186803b15801561035457600080fd5b505afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c91906111e7565b90506040518060a0016040528083600001516001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156103d657600080fd5b505afa1580156103ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261041291908101906110f1565b815283516001600160a01b031660208201526040016104446104338b610bb6565b60208601519063ffffffff610bdf16565b815260200182815260200161045a84848a610c09565b81525089848151811061046957fe5b602002602001018190525061048b826040015185610c6490919063ffffffff16565b935050506001016102e3565b506040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156104fc57600080fd5b505afa158015610510573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261053891908101906110f1565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316815260200161058561057888610bb6565b849063ffffffff610bdf16565b8152602001610592610caa565b815260200160008152508683815181106105a857fe5b60200260200101819052505050505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000610683846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e91906111e7565b610bb6565b90507f00000000000000000000000000000000000000000000000000000000000000006106bf826106b387610aad565b9063ffffffff610bdf16565b9250925050915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636ccdc82e856040518263ffffffff1660e01b815260040161073c919061122b565b60206040518083038186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c91906111e7565b9050806107a35761079b610cb6565b915050610a83565b600061085361067e64e8d4a510007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663543ce73a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561080a57600080fd5b505afa15801561081e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084291906111c4565b62ffffff169063ffffffff610cbc16565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bba85bcf876040518263ffffffff1660e01b81526004016108a3919061122b565b60606040518083038186803b1580156108bb57600080fd5b505afa1580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f391906110c4565b5091505060006109607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663293a5077896040518263ffffffff1660e01b8152600401610948919061122b565b60206040518083038186803b15801561064657600080fd5b9050600061096d88610aad565b90506000808412156109a25761099d83610991876106b3868963ffffffff610c6416565b9063ffffffff610cf616565b6109b6565b6109b683610991848863ffffffff610bdf16565b905060006109de6109d1876106b3858d63ffffffff610d3c16565b839063ffffffff610cf616565b9050610a798a6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1c57600080fd5b505afa158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5491906111e7565b610a6d89610a6185610d5a565b9063ffffffff610d7c16565b9063ffffffff610da616565b9750505050505050505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610ab7610f69565b604051630f6a21fd60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637b510fe890610b0390869060040161122b565b60806040518083038186803b158015610b1b57600080fd5b505afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b53919061117d565b604081015160208201518251929350610b8192610b759163ffffffff610c6416565b9063ffffffff610c6416565b9392505050565b600082820183811015610b815760405162461bcd60e51b8152600401610bad90611301565b60405180910390fd5b6000600160ff1b8210610bdb5760405162461bcd60e51b8152600401610bad90611477565b5090565b6000610b8182610bfd85670de0b6b3a764000063ffffffff610dc416565b9063ffffffff610e2f16565b600080610c298560200151610c1d86610bb6565b9063ffffffff610d3c16565b90506000610c488660400151610b758685610c6490919063ffffffff16565b9050610c5a828263ffffffff610bdf16565b9695505050505050565b6000828201818312801590610c795750838112155b80610c8e5750600083128015610c8e57508381125b610b815760405162461bcd60e51b8152600401610bad90611338565b670de0b6b3a764000090565b60001990565b600082610ccb57506000610a83565b82820282848281610cd857fe5b0414610b815760405162461bcd60e51b8152600401610bad906113ef565b6000818303818312801590610d0b5750838113155b80610d205750600083128015610d2057508381135b610b815760405162461bcd60e51b8152600401610bad906114bf565b6000610b81670de0b6b3a7640000610bfd858563ffffffff610dc416565b600080821215610bdb5760405162461bcd60e51b8152600401610bad90611379565b6000610b8182610d9a85670de0b6b3a764000063ffffffff610cbc16565b9063ffffffff610e9316565b6000610b81670de0b6b3a7640000610d9a858563ffffffff610cbc16565b600082610dd357506000610a83565b82600019148015610de75750600160ff1b82145b15610e045760405162461bcd60e51b8152600401610bad90611430565b82820282848281610e1157fe5b0514610b815760405162461bcd60e51b8152600401610bad90611430565b600081610e4e5760405162461bcd60e51b8152600401610bad90611503565b81600019148015610e625750600160ff1b83145b15610e7f5760405162461bcd60e51b8152600401610bad906113ae565b6000828481610e8a57fe5b05949350505050565b6000610b8183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060008183610ef15760405162461bcd60e51b8152600401610bad91906112ee565b506000838581610efd57fe5b0495945050505050565b6040518060a001604052806060815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b600060608284031215610fa2578081fd5b610fac6060611538565b90508151610fb9816115af565b80825250602082015160208201526040820151604082015292915050565b60006020808385031215610fe9578182fd5b825167ffffffffffffffff811115610fff578283fd5b80840185601f820112611010578384fd5b805191506110256110208361155f565b611538565b828152838101908285016060808602850187018a1015611043578788fd5b8794505b8585101561106f576110598a83610f91565b8452600194909401939286019290810190611047565b509098975050505050505050565b60006020828403121561108e578081fd5b8135610b81816115af565b600080604083850312156110ab578081fd5b82356110b6816115af565b946020939093013593505050565b6000806000606084860312156110d8578081fd5b8351925060208401519150604084015190509250925092565b600060208284031215611102578081fd5b815167ffffffffffffffff80821115611119578283fd5b81840185601f82011261112a578384fd5b805192508183111561113a578384fd5b61114d601f8401601f1916602001611538565b9150828252856020848301011115611163578384fd5b61117483602084016020840161157f565b50949350505050565b60006080828403121561118e578081fd5b6111986080611538565b825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b6000602082840312156111d5578081fd5b815162ffffff81168114610b81578182fd5b6000602082840312156111f8578081fd5b5051919050565b6000815180845261121781602086016020860161157f565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561106f57603f19898403018552815160a08151818652611289828701826111ff565b838b01516001600160a01b0316878c0152898401518a88015260608085015190880152608093840151939096019290925250509386019390860190600101611263565b6001600160a01b03929092168252602082015260400190565b90815260200190565b600060208252610b8160208301846111ff565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526021908201527f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f53616665436173743a2076616c7565206d75737420626520706f736974697665604082015260600190565b60208082526021908201527f5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526027908201527f5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f604082015266766572666c6f7760c81b606082015260800190565b60208082526028908201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604082015267371034b73a191a9b60c11b606082015260800190565b60208082526024908201527f5369676e6564536166654d6174683a207375627472616374696f6e206f766572604082015263666c6f7760e01b606082015260800190565b6020808252818101527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604082015260600190565b60405181810167ffffffffffffffff8111828210171561155757600080fd5b604052919050565b600067ffffffffffffffff821115611575578081fd5b5060209081020190565b60005b8381101561159a578181015183820152602001611582565b838111156115a9576000848401525b50505050565b6001600160a01b03811681146115c457600080fd5b5056fea264697066735822122072f63185ef035592fe87d7c2152a65e06110bf998ba619b64662a3c3d30cc32664736f6c634300060a0033";

type PerpV2LeverageModuleViewerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PerpV2LeverageModuleViewerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PerpV2LeverageModuleViewer__factory extends ContractFactory {
  constructor(...args: PerpV2LeverageModuleViewerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _perpModule: string,
    _perpAccountBalance: string,
    _perpClearingHouseConfig: string,
    _vQuoteToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PerpV2LeverageModuleViewer> {
    return super.deploy(
      _perpModule,
      _perpAccountBalance,
      _perpClearingHouseConfig,
      _vQuoteToken,
      overrides || {}
    ) as Promise<PerpV2LeverageModuleViewer>;
  }
  getDeployTransaction(
    _perpModule: string,
    _perpAccountBalance: string,
    _perpClearingHouseConfig: string,
    _vQuoteToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _perpModule,
      _perpAccountBalance,
      _perpClearingHouseConfig,
      _vQuoteToken,
      overrides || {}
    );
  }
  attach(address: string): PerpV2LeverageModuleViewer {
    return super.attach(address) as PerpV2LeverageModuleViewer;
  }
  connect(signer: Signer): PerpV2LeverageModuleViewer__factory {
    return super.connect(signer) as PerpV2LeverageModuleViewer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerpV2LeverageModuleViewerInterface {
    return new utils.Interface(_abi) as PerpV2LeverageModuleViewerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PerpV2LeverageModuleViewer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PerpV2LeverageModuleViewer;
  }
}

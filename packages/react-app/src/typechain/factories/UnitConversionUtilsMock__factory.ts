/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnitConversionUtilsMock,
  UnitConversionUtilsMockInterface,
} from "../UnitConversionUtilsMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "_amount",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "testFromPreciseUnitToDecimalsInt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "testFromPreciseUnitToDecimalsUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
    gas: "0x01ba8140",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_amount",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "testToPreciseUnitsFromDecimalsInt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
    gas: "0x01ba8140",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061041d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063ab34de0414610046578063d75ed2121461007e578063d8df4fa9146100a4575b600080fd5b61006c6004803603604081101561005c57600080fd5b508035906020013560ff166100ca565b60408051918252519081900360200190f35b61006c6004803603604081101561009457600080fd5b508035906020013560ff166100e5565b61006c600480360360408110156100ba57600080fd5b508035906020013560ff166100f7565b60006100dc838363ffffffff61010916565b90505b92915050565b60006100dc838363ffffffff61012416565b60006100dc838363ffffffff61013f16565b60006100dc8360ff8416601203600a0a63ffffffff61015a16565b60006100dc8360ff8416601203600a0a63ffffffff61019c16565b60006100dc8360ff8416601203600a0a63ffffffff61025416565b60006100dc83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506102fd565b6000816101f0576040805162461bcd60e51b815260206004820181905260248201527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604482015290519081900360640190fd5b816000191480156102045750600160ff1b83145b156102405760405162461bcd60e51b81526004018080602001828103825260218152602001806103a06021913960400191505060405180910390fd5b600082848161024b57fe5b05949350505050565b600082610263575060006100df565b826000191480156102775750600160ff1b82145b156102b35760405162461bcd60e51b81526004018080602001828103825260278152602001806103c16027913960400191505060405180910390fd5b828202828482816102c057fe5b05146100dc5760405162461bcd60e51b81526004018080602001828103825260278152602001806103c16027913960400191505060405180910390fd5b600081836103895760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561034e578181015183820152602001610336565b50505050905090810190601f16801561037b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161039557fe5b049594505050505056fe5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f775369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220befeaf5ce8f3fc7ef19b3e9f73d80fe6596aa011ab7051915d6d8908c4823cd964736f6c634300060a0033";

type UnitConversionUtilsMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnitConversionUtilsMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnitConversionUtilsMock__factory extends ContractFactory {
  constructor(...args: UnitConversionUtilsMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnitConversionUtilsMock> {
    return super.deploy(overrides || {}) as Promise<UnitConversionUtilsMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UnitConversionUtilsMock {
    return super.attach(address) as UnitConversionUtilsMock;
  }
  connect(signer: Signer): UnitConversionUtilsMock__factory {
    return super.connect(signer) as UnitConversionUtilsMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnitConversionUtilsMockInterface {
    return new utils.Interface(_abi) as UnitConversionUtilsMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnitConversionUtilsMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UnitConversionUtilsMock;
  }
}

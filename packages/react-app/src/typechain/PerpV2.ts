/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type OpenPositionParamsStruct = {
  baseToken: string;
  isBaseToQuote: boolean;
  isExactInput: boolean;
  amount: BigNumberish;
  oppositeAmountBound: BigNumberish;
  deadline: BigNumberish;
  sqrtPriceLimitX96: BigNumberish;
  referralCode: BytesLike;
};

export type OpenPositionParamsStructOutput = [
  string,
  boolean,
  boolean,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  string
] & {
  baseToken: string;
  isBaseToQuote: boolean;
  isExactInput: boolean;
  amount: BigNumber;
  oppositeAmountBound: BigNumber;
  deadline: BigNumber;
  sqrtPriceLimitX96: BigNumber;
  referralCode: string;
};

export type SwapParamsStruct = {
  baseToken: string;
  isBaseToQuote: boolean;
  isExactInput: boolean;
  amount: BigNumberish;
  sqrtPriceLimitX96: BigNumberish;
};

export type SwapParamsStructOutput = [
  string,
  boolean,
  boolean,
  BigNumber,
  BigNumber
] & {
  baseToken: string;
  isBaseToQuote: boolean;
  isExactInput: boolean;
  amount: BigNumber;
  sqrtPriceLimitX96: BigNumber;
};

export interface PerpV2Interface extends utils.Interface {
  functions: {
    "getDepositCalldata(IVault,IERC20,uint256)": FunctionFragment;
    "getOpenPositionCalldata(IClearingHouse,(address,bool,bool,uint256,uint256,uint256,uint160,bytes32))": FunctionFragment;
    "getSwapCalldata(IQuoter,(address,bool,bool,uint256,uint160))": FunctionFragment;
    "getWithdrawCalldata(IVault,IERC20,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getDepositCalldata",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOpenPositionCalldata",
    values: [string, OpenPositionParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getSwapCalldata",
    values: [string, SwapParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getWithdrawCalldata",
    values: [string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getDepositCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOpenPositionCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSwapCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWithdrawCalldata",
    data: BytesLike
  ): Result;

  events: {};
}

export interface PerpV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PerpV2Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getDepositCalldata(
      _vault: string,
      _asset: string,
      _amountNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;

    getOpenPositionCalldata(
      _clearingHouse: string,
      _params: OpenPositionParamsStruct,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;

    getSwapCalldata(
      _quoter: string,
      _params: SwapParamsStruct,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;

    getWithdrawCalldata(
      _vault: string,
      _asset: string,
      _amountNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;
  };

  getDepositCalldata(
    _vault: string,
    _asset: string,
    _amountNotional: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber, string]>;

  getOpenPositionCalldata(
    _clearingHouse: string,
    _params: OpenPositionParamsStruct,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber, string]>;

  getSwapCalldata(
    _quoter: string,
    _params: SwapParamsStruct,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber, string]>;

  getWithdrawCalldata(
    _vault: string,
    _asset: string,
    _amountNotional: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber, string]>;

  callStatic: {
    getDepositCalldata(
      _vault: string,
      _asset: string,
      _amountNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;

    getOpenPositionCalldata(
      _clearingHouse: string,
      _params: OpenPositionParamsStruct,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;

    getSwapCalldata(
      _quoter: string,
      _params: SwapParamsStruct,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;

    getWithdrawCalldata(
      _vault: string,
      _asset: string,
      _amountNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;
  };

  filters: {};

  estimateGas: {
    getDepositCalldata(
      _vault: string,
      _asset: string,
      _amountNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOpenPositionCalldata(
      _clearingHouse: string,
      _params: OpenPositionParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSwapCalldata(
      _quoter: string,
      _params: SwapParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWithdrawCalldata(
      _vault: string,
      _asset: string,
      _amountNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getDepositCalldata(
      _vault: string,
      _asset: string,
      _amountNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOpenPositionCalldata(
      _clearingHouse: string,
      _params: OpenPositionParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSwapCalldata(
      _quoter: string,
      _params: SwapParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWithdrawCalldata(
      _vault: string,
      _asset: string,
      _amountNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

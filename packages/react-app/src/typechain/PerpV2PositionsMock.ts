/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type PositionNotionalInfoStruct = {
  baseToken: string;
  baseBalance: BigNumberish;
  quoteBalance: BigNumberish;
};

export type PositionNotionalInfoStructOutput = [
  string,
  BigNumber,
  BigNumber
] & { baseToken: string; baseBalance: BigNumber; quoteBalance: BigNumber };

export type PositionUnitInfoStruct = {
  baseToken: string;
  baseUnit: BigNumberish;
  quoteUnit: BigNumberish;
};

export type PositionUnitInfoStructOutput = [string, BigNumber, BigNumber] & {
  baseToken: string;
  baseUnit: BigNumber;
  quoteUnit: BigNumber;
};

export interface PerpV2PositionsMockInterface extends utils.Interface {
  functions: {
    "initializeModuleOnSet(address)": FunctionFragment;
    "testFormatAdjustments(address,address,int256,int256)": FunctionFragment;
    "testGetNetQuoteBalance(address,address[],address)": FunctionFragment;
    "testGetPositionNotionalInfo(address,address[],address)": FunctionFragment;
    "testGetPositionUnitInfo(address,address[],address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "initializeModuleOnSet",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "testFormatAdjustments",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testGetNetQuoteBalance",
    values: [string, string[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "testGetPositionNotionalInfo",
    values: [string, string[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "testGetPositionUnitInfo",
    values: [string, string[], string]
  ): string;

  decodeFunctionResult(
    functionFragment: "initializeModuleOnSet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testFormatAdjustments",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testGetNetQuoteBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testGetPositionNotionalInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testGetPositionUnitInfo",
    data: BytesLike
  ): Result;

  events: {};
}

export interface PerpV2PositionsMock extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PerpV2PositionsMockInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    initializeModuleOnSet(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testFormatAdjustments(
      _setToken: string,
      _adjustmentComponent: string,
      _currentExternalPositionUnit: BigNumberish,
      _newExternalPositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[], BigNumber[]]>;

    testGetNetQuoteBalance(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { netQuoteBalance: BigNumber }>;

    testGetPositionNotionalInfo(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<[PositionNotionalInfoStructOutput[]]>;

    testGetPositionUnitInfo(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<[PositionUnitInfoStructOutput[]]>;
  };

  initializeModuleOnSet(
    _setToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testFormatAdjustments(
    _setToken: string,
    _adjustmentComponent: string,
    _currentExternalPositionUnit: BigNumberish,
    _newExternalPositionUnit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber[], BigNumber[]]>;

  testGetNetQuoteBalance(
    _setToken: string,
    _baseTokens: string[],
    _perpAccountBalance: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  testGetPositionNotionalInfo(
    _setToken: string,
    _baseTokens: string[],
    _perpAccountBalance: string,
    overrides?: CallOverrides
  ): Promise<PositionNotionalInfoStructOutput[]>;

  testGetPositionUnitInfo(
    _setToken: string,
    _baseTokens: string[],
    _perpAccountBalance: string,
    overrides?: CallOverrides
  ): Promise<PositionUnitInfoStructOutput[]>;

  callStatic: {
    initializeModuleOnSet(
      _setToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    testFormatAdjustments(
      _setToken: string,
      _adjustmentComponent: string,
      _currentExternalPositionUnit: BigNumberish,
      _newExternalPositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[], BigNumber[]]>;

    testGetNetQuoteBalance(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testGetPositionNotionalInfo(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<PositionNotionalInfoStructOutput[]>;

    testGetPositionUnitInfo(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<PositionUnitInfoStructOutput[]>;
  };

  filters: {};

  estimateGas: {
    initializeModuleOnSet(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testFormatAdjustments(
      _setToken: string,
      _adjustmentComponent: string,
      _currentExternalPositionUnit: BigNumberish,
      _newExternalPositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testGetNetQuoteBalance(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testGetPositionNotionalInfo(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testGetPositionUnitInfo(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    initializeModuleOnSet(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testFormatAdjustments(
      _setToken: string,
      _adjustmentComponent: string,
      _currentExternalPositionUnit: BigNumberish,
      _newExternalPositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testGetNetQuoteBalance(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testGetPositionNotionalInfo(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testGetPositionUnitInfo(
      _setToken: string,
      _baseTokens: string[],
      _perpAccountBalance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface InvokeMockInterface extends utils.Interface {
  functions: {
    "initializeModuleOnSet(address)": FunctionFragment;
    "testInvokeApprove(address,address,address,uint256)": FunctionFragment;
    "testInvokeTransfer(address,address,address,uint256)": FunctionFragment;
    "testInvokeUnwrapWETH(address,address,uint256)": FunctionFragment;
    "testInvokeWrapWETH(address,address,uint256)": FunctionFragment;
    "testStrictInvokeTransfer(address,address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "initializeModuleOnSet",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "testInvokeApprove",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testInvokeTransfer",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testInvokeUnwrapWETH",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testInvokeWrapWETH",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testStrictInvokeTransfer",
    values: [string, string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "initializeModuleOnSet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testInvokeApprove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testInvokeTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testInvokeUnwrapWETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testInvokeWrapWETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "testStrictInvokeTransfer",
    data: BytesLike
  ): Result;

  events: {};
}

export interface InvokeMock extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: InvokeMockInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    initializeModuleOnSet(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testInvokeApprove(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testInvokeTransfer(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testInvokeUnwrapWETH(
      _setToken: string,
      _weth: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testInvokeWrapWETH(
      _setToken: string,
      _weth: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    testStrictInvokeTransfer(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  initializeModuleOnSet(
    _setToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testInvokeApprove(
    _setToken: string,
    _token: string,
    _spender: string,
    _quantity: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testInvokeTransfer(
    _setToken: string,
    _token: string,
    _spender: string,
    _quantity: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testInvokeUnwrapWETH(
    _setToken: string,
    _weth: string,
    _quantity: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testInvokeWrapWETH(
    _setToken: string,
    _weth: string,
    _quantity: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  testStrictInvokeTransfer(
    _setToken: string,
    _token: string,
    _spender: string,
    _quantity: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    initializeModuleOnSet(
      _setToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    testInvokeApprove(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testInvokeTransfer(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testInvokeUnwrapWETH(
      _setToken: string,
      _weth: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testInvokeWrapWETH(
      _setToken: string,
      _weth: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    testStrictInvokeTransfer(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    initializeModuleOnSet(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testInvokeApprove(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testInvokeTransfer(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testInvokeUnwrapWETH(
      _setToken: string,
      _weth: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testInvokeWrapWETH(
      _setToken: string,
      _weth: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    testStrictInvokeTransfer(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    initializeModuleOnSet(
      _setToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testInvokeApprove(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testInvokeTransfer(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testInvokeUnwrapWETH(
      _setToken: string,
      _weth: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testInvokeWrapWETH(
      _setToken: string,
      _weth: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    testStrictInvokeTransfer(
      _setToken: string,
      _token: string,
      _spender: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}

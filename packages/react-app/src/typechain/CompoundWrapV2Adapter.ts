/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface CompoundWrapV2AdapterInterface extends utils.Interface {
  functions: {
    "ETH_TOKEN_ADDRESS()": FunctionFragment;
    "getSpenderAddress(address,address)": FunctionFragment;
    "getUnwrapCallData(address,address,uint256,address,bytes)": FunctionFragment;
    "getWrapCallData(address,address,uint256,address,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ETH_TOKEN_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSpenderAddress",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnwrapCallData",
    values: [string, string, BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getWrapCallData",
    values: [string, string, BigNumberish, string, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "ETH_TOKEN_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpenderAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnwrapCallData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWrapCallData",
    data: BytesLike
  ): Result;

  events: {};
}

export interface CompoundWrapV2Adapter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CompoundWrapV2AdapterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    ETH_TOKEN_ADDRESS(overrides?: CallOverrides): Promise<[string]>;

    getSpenderAddress(
      arg0: string,
      _wrappedToken: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getUnwrapCallData(
      arg0: string,
      _wrappedToken: string,
      _wrappedTokenUnits: BigNumberish,
      arg3: string,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;

    getWrapCallData(
      _underlyingToken: string,
      _wrappedToken: string,
      _underlyingUnits: BigNumberish,
      arg3: string,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;
  };

  ETH_TOKEN_ADDRESS(overrides?: CallOverrides): Promise<string>;

  getSpenderAddress(
    arg0: string,
    _wrappedToken: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getUnwrapCallData(
    arg0: string,
    _wrappedToken: string,
    _wrappedTokenUnits: BigNumberish,
    arg3: string,
    arg4: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber, string]>;

  getWrapCallData(
    _underlyingToken: string,
    _wrappedToken: string,
    _underlyingUnits: BigNumberish,
    arg3: string,
    arg4: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber, string]>;

  callStatic: {
    ETH_TOKEN_ADDRESS(overrides?: CallOverrides): Promise<string>;

    getSpenderAddress(
      arg0: string,
      _wrappedToken: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getUnwrapCallData(
      arg0: string,
      _wrappedToken: string,
      _wrappedTokenUnits: BigNumberish,
      arg3: string,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;

    getWrapCallData(
      _underlyingToken: string,
      _wrappedToken: string,
      _underlyingUnits: BigNumberish,
      arg3: string,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber, string]>;
  };

  filters: {};

  estimateGas: {
    ETH_TOKEN_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    getSpenderAddress(
      arg0: string,
      _wrappedToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUnwrapCallData(
      arg0: string,
      _wrappedToken: string,
      _wrappedTokenUnits: BigNumberish,
      arg3: string,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWrapCallData(
      _underlyingToken: string,
      _wrappedToken: string,
      _underlyingUnits: BigNumberish,
      arg3: string,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ETH_TOKEN_ADDRESS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getSpenderAddress(
      arg0: string,
      _wrappedToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUnwrapCallData(
      arg0: string,
      _wrappedToken: string,
      _wrappedTokenUnits: BigNumberish,
      arg3: string,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWrapCallData(
      _underlyingToken: string,
      _wrappedToken: string,
      _underlyingUnits: BigNumberish,
      arg3: string,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

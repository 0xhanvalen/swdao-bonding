/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface PositionV2Interface extends utils.Interface {
  functions: {
    "calculateDefaultEditPositionUnit(uint256,uint256,uint256,uint256)": FunctionFragment;
    "getDefaultPositionUnit(uint256,uint256)": FunctionFragment;
    "getDefaultTotalNotional(uint256,uint256)": FunctionFragment;
    "getDefaultTrackedBalance(ISetToken,address)": FunctionFragment;
    "hasDefaultPosition(ISetToken,address)": FunctionFragment;
    "hasExternalPosition(ISetToken,address)": FunctionFragment;
    "hasSufficientDefaultUnits(ISetToken,address,uint256)": FunctionFragment;
    "hasSufficientExternalUnits(ISetToken,address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "calculateDefaultEditPositionUnit",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDefaultPositionUnit",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDefaultTotalNotional",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDefaultTrackedBalance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasDefaultPosition",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasExternalPosition",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasSufficientDefaultUnits",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "hasSufficientExternalUnits",
    values: [string, string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "calculateDefaultEditPositionUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDefaultPositionUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDefaultTotalNotional",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDefaultTrackedBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasDefaultPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasExternalPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasSufficientDefaultUnits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasSufficientExternalUnits",
    data: BytesLike
  ): Result;

  events: {};
}

export interface PositionV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PositionV2Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    calculateDefaultEditPositionUnit(
      _setTokenSupply: BigNumberish,
      _preTotalNotional: BigNumberish,
      _postTotalNotional: BigNumberish,
      _prePositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDefaultPositionUnit(
      _setTokenSupply: BigNumberish,
      _totalNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDefaultTotalNotional(
      _setTokenSupply: BigNumberish,
      _positionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDefaultTrackedBalance(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    hasDefaultPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    hasExternalPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    hasSufficientDefaultUnits(
      _setToken: string,
      _component: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    hasSufficientExternalUnits(
      _setToken: string,
      _component: string,
      _positionModule: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  calculateDefaultEditPositionUnit(
    _setTokenSupply: BigNumberish,
    _preTotalNotional: BigNumberish,
    _postTotalNotional: BigNumberish,
    _prePositionUnit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDefaultPositionUnit(
    _setTokenSupply: BigNumberish,
    _totalNotional: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDefaultTotalNotional(
    _setTokenSupply: BigNumberish,
    _positionUnit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDefaultTrackedBalance(
    _setToken: string,
    _component: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  hasDefaultPosition(
    _setToken: string,
    _component: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  hasExternalPosition(
    _setToken: string,
    _component: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  hasSufficientDefaultUnits(
    _setToken: string,
    _component: string,
    _unit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  hasSufficientExternalUnits(
    _setToken: string,
    _component: string,
    _positionModule: string,
    _unit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    calculateDefaultEditPositionUnit(
      _setTokenSupply: BigNumberish,
      _preTotalNotional: BigNumberish,
      _postTotalNotional: BigNumberish,
      _prePositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultPositionUnit(
      _setTokenSupply: BigNumberish,
      _totalNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultTotalNotional(
      _setTokenSupply: BigNumberish,
      _positionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultTrackedBalance(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasDefaultPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    hasExternalPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    hasSufficientDefaultUnits(
      _setToken: string,
      _component: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    hasSufficientExternalUnits(
      _setToken: string,
      _component: string,
      _positionModule: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    calculateDefaultEditPositionUnit(
      _setTokenSupply: BigNumberish,
      _preTotalNotional: BigNumberish,
      _postTotalNotional: BigNumberish,
      _prePositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultPositionUnit(
      _setTokenSupply: BigNumberish,
      _totalNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultTotalNotional(
      _setTokenSupply: BigNumberish,
      _positionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDefaultTrackedBalance(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasDefaultPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasExternalPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasSufficientDefaultUnits(
      _setToken: string,
      _component: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasSufficientExternalUnits(
      _setToken: string,
      _component: string,
      _positionModule: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    calculateDefaultEditPositionUnit(
      _setTokenSupply: BigNumberish,
      _preTotalNotional: BigNumberish,
      _postTotalNotional: BigNumberish,
      _prePositionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDefaultPositionUnit(
      _setTokenSupply: BigNumberish,
      _totalNotional: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDefaultTotalNotional(
      _setTokenSupply: BigNumberish,
      _positionUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDefaultTrackedBalance(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasDefaultPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasExternalPosition(
      _setToken: string,
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasSufficientDefaultUnits(
      _setToken: string,
      _component: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasSufficientExternalUnits(
      _setToken: string,
      _component: string,
      _positionModule: string,
      _unit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
